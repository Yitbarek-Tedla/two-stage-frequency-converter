

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Sun Jan 19 18:35:58 2020

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F84
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	dabs	1,0x4E,2
    10  0000                     
    11                           ; Version 2.05
    12                           ; Generated 20/12/2018 GMT
    13                           ; 
    14                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    15                           ; All rights reserved.
    16                           ; 
    17                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    18                           ; 
    19                           ; Redistribution and use in source and binary forms, with or without modification, are
    20                           ; permitted provided that the following conditions are met:
    21                           ; 
    22                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    23                           ;        conditions and the following disclaimer.
    24                           ; 
    25                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    26                           ;        of conditions and the following disclaimer in the documentation and/or other
    27                           ;        materials provided with the distribution.
    28                           ; 
    29                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    30                           ;        software without specific prior written permission.
    31                           ; 
    32                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    33                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    34                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    35                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    36                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    37                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    38                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    39                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    40                           ; 
    41                           ; 
    42                           ; Code-generator required, PIC16F84 Definitions
    43                           ; 
    44                           ; SFR Addresses
    45  0000                     	;# 
    46  0001                     	;# 
    47  0002                     	;# 
    48  0003                     	;# 
    49  0004                     	;# 
    50  0005                     	;# 
    51  0006                     	;# 
    52  0008                     	;# 
    53  0009                     	;# 
    54  000A                     	;# 
    55  000B                     	;# 
    56  0081                     	;# 
    57  0085                     	;# 
    58  0086                     	;# 
    59  0088                     	;# 
    60  0089                     	;# 
    61  0000                     	;# 
    62  0001                     	;# 
    63  0002                     	;# 
    64  0003                     	;# 
    65  0004                     	;# 
    66  0005                     	;# 
    67  0006                     	;# 
    68  0008                     	;# 
    69  0009                     	;# 
    70  000A                     	;# 
    71  000B                     	;# 
    72  0081                     	;# 
    73  0085                     	;# 
    74  0086                     	;# 
    75  0088                     	;# 
    76  0089                     	;# 
    77                           
    78                           	psect	idataBANK0
    79  03DB                     __pidataBANK0:	
    80                           
    81                           ;initializer for _f
    82  03DB  3405               	retlw	5
    83  03DC  3400               	retlw	0
    84  0005                     _PORTA	set	5
    85  0085                     _TRISA	set	133
    86                           
    87                           ; #config settings
    88  0000                     
    89                           	psect	cinit
    90  03FA                     start_initialization:	
    91  03FA                     __initialization:	
    92                           
    93                           ; Initialize objects allocated to BANK0
    94  03FA  23DB               	fcall	__pidataBANK0	;fetch initializer
    95  03FB  008C               	movwf	__pdataBANK0& (0+127)
    96  03FC  23DC               	fcall	__pidataBANK0+1	;fetch initializer
    97  03FD  008D               	movwf	(__pdataBANK0+1)& (0+127)
    98  03FE                     end_of_initialization:	
    99                           ;End of C runtime variable initialization code
   100                           
   101  03FE                     __end_of__initialization:	
   102  03FE  0183               	clrf	3
   103  03FF  2BDD               	ljmp	_main	;jump to C main() function
   104                           
   105                           	psect	dataBANK0
   106  000C                     __pdataBANK0:	
   107  000C                     _f:	
   108  000C                     	ds	2
   109                           
   110                           	psect	cstackBANK0
   111  000E                     __pcstackBANK0:	
   112  000E                     ?_main:	
   113  000E                     ??_main:	
   114                           ; 1 bytes @ 0x0
   115                           
   116                           
   117                           ; 1 bytes @ 0x0
   118  000E                     	ds	2
   119                           
   120                           	psect	maintext
   121  03DD                     __pmaintext:	
   122 ;;
   123 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   124 ;;
   125 ;; *************** function _main *****************
   126 ;; Defined at:
   127 ;;		line 16 in file "newmain.c"
   128 ;; Parameters:    Size  Location     Type
   129 ;;		None
   130 ;; Auto vars:     Size  Location     Type
   131 ;;		None
   132 ;; Return value:  Size  Location     Type
   133 ;;                  1    wreg      void 
   134 ;; Registers used:
   135 ;;		wreg, status,2, status,0
   136 ;; Tracked objects:
   137 ;;		On entry : B00/0
   138 ;;		On exit  : 0/0
   139 ;;		Unchanged: 0/0
   140 ;; Data sizes:     COMMON   BANK0
   141 ;;      Params:         0       0
   142 ;;      Locals:         0       0
   143 ;;      Temps:          0       2
   144 ;;      Totals:         0       2
   145 ;;Total ram usage:        2 bytes
   146 ;; This function calls:
   147 ;;		Nothing
   148 ;; This function is called by:
   149 ;;		Startup code after reset
   150 ;; This function uses a non-reentrant model
   151 ;;
   152                           
   153                           
   154                           ;psect for function _main
   155  03DD                     _main:	
   156                           
   157                           ;newmain.c: 17:     TRISA = 0x00;
   158                           
   159                           ;incstack = 0
   160                           ; Regs used in _main: [wreg+status,2+status,0]
   161  03DD  1683               	bsf	3,5	;RP0=1, select bank1
   162  03DE  0185               	clrf	5	;volatile
   163  03DF                     l854:	
   164                           
   165                           ;newmain.c: 19:         PORTA = 1;
   166  03DF  3001               	movlw	1
   167  03E0  1283               	bcf	3,5	;RP0=0, select bank0
   168  03E1  0085               	movwf	5	;volatile
   169                           
   170                           ;newmain.c: 20:         _delay((unsigned long)((f)*(8000000/4000.0)));
   171  03E2  300D               	movlw	13
   172  03E3  008F               	movwf	??_main+1
   173  03E4  30FB               	movlw	251
   174  03E5  008E               	movwf	??_main
   175  03E6                     u657:	
   176  03E6  0B8E               	decfsz	??_main,f
   177  03E7  2BE6               	goto	u657
   178  03E8  0B8F               	decfsz	??_main+1,f
   179  03E9  2BE6               	goto	u657
   180  03EA  2BEB               	nop2
   181                           
   182                           ;newmain.c: 21:         PORTA= PORTA<<1;
   183  03EB  1283               	bcf	3,5	;RP0=0, select bank0
   184  03EC  0805               	movf	5,w	;volatile
   185  03ED  008E               	movwf	??_main
   186  03EE  070E               	addwf	??_main,w
   187  03EF  0085               	movwf	5	;volatile
   188                           
   189                           ;newmain.c: 22:         _delay((unsigned long)((f)*(8000000/4000.0)));
   190  03F0  300D               	movlw	13
   191  03F1  008F               	movwf	??_main+1
   192  03F2  30FB               	movlw	251
   193  03F3  008E               	movwf	??_main
   194  03F4                     u667:	
   195  03F4  0B8E               	decfsz	??_main,f
   196  03F5  2BF4               	goto	u667
   197  03F6  0B8F               	decfsz	??_main+1,f
   198  03F7  2BF4               	goto	u667
   199  03F8  2BF9               	nop2
   200  03F9  2BDF               	goto	l854
   201  03FA                     __end_of_main:	
   202  004E                     btemp	set	78	;btemp
   203  004E                     wtemp0	set	78


Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON            0      0       0
    BANK0            66      2       4

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0       0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               42      2       4       3        6.1%
BITBANK0            42      0       0       5        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               0      0       0       1        0.0%
BITCOMMON            0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0       4       6        0.0%
ABS                  0      0       4       4        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA              40      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Sun Jan 19 18:35:58 2020

                      _f 000C              __CFG_CP$OFF 0000                      l854 03DF  
                    u657 03E6                      u667 03F4             __CFG_FOSC$HS 0000  
                   _main 03DD                     btemp 004E                     start 0000  
                  ?_main 000E            __CFG_WDTE$OFF 0000                    _PORTA 0005  
                  _TRISA 0085                    status 0003                    wtemp0 004E  
        __initialization 03FA             __end_of_main 03FA                   ??_main 000E  
         __CFG_PWRTE$OFF 0000  __end_of__initialization 03FE             __pidataBANK0 03DB  
             __pmaintext 03DD     end_of_initialization 03FE      start_initialization 03FA  
            __pdataBANK0 000C                ___latbits 0000            __pcstackBANK0 000E  
          __size_of_main 001D  
